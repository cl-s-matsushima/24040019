# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "centos/7"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  config.vm.network "private_network", ip: "192.168.33.17"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Disable the default share of the current code directory. Doing this
  # provides improved isolation between the vagrant box and your host
  # by making sure your Vagrantfile isn't accessible to the vagrant box.
  # If you use this you may want to enable additional shared subfolders as
  # shown above.
  # config.vm.synced_folder ".", "/vagrant", disabled: true

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
  # documentation for more information about their specific syntax and use.

config.vm.provision "shell", inline: <<-SHELL

sudo su
sed -i -e "/^mirrorlist=/c\#mirrorlist=http://mirrorlist.centos.org/?release='$'releasever&arch='$'basearch&repo=os&infra='$'infra" /etc/yum.repos.d/CentOS-Base.repo

sed -i -e "/^\#baseurl=/c\   baseurl=https://ftp.jaist.ac.jp/pub/Linux/CentOS-vault/7.8.2003/os/'$'basearch/" /etc/yum.repos.d/CentOS-Base.repo

sed -i -e "/\#additional packages that may be useful/i\   enabled=0" /etc/yum.repos.d/CentOS-Base.repo

sed -i -e "/\#additional packages that extend functionality of existing packages/i\   enabled=0" /etc/yum.repos.d/CentOS-Base.repo

yum install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm -y

rpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-7.rpm

yum -y install wget
yum -y install unar

yum -y install httpd httpd-tools httpd-devel httpd-manual
systemctl start httpd
systemctl enable httpd
systemctl start firewalld
firewall-cmd --add-service=http --permanent
firewall-cmd --reload

yum -y install --enablerepo=remi,remi-php73 php php-mbstring php-xml php-xmlrpc php-gd php-pdo php-pecl-mcrypt php-mysqlnd php-pecl-mysql
systemctl restart httpd.service

yum remove mariadb* -y
curl -sS https://downloads.mariadb.com/MariaDB/mariadb_repo_setup | bash
yum -y install MariaDB-server

sed -i -e "/# This group is read by both MariaDB and MySQL servers/i character-set-server=utf8" /etc/my.cnf.d/server.cnf
sed -i -e "/# This group is only read by MariaDB servers, not by MySQL./i character-set-server=utf8" /etc/my.cnf.d/server.cnf
systemctl start mariadb
systemctl enable mariadb

cd /var/www/html
wget https://ja.wordpress.org/latest-ja.zip
unar latest-ja.zip
cd wordpress/
mv * ../
cd ..
chmod -R 777 /var/www/html
mysql -uroot -e "CREATE DATABASE wordpc3;"
mysql -uroot -e "CREATE USER 'nacm'@'localhost' IDENTIFIED BY 'Vagran1o';"
mysql -uroot -e "GRANT ALL ON wordpc3.* TO nacm@localhost;"

SHELL

end
